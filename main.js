(()=>{"use strict";class Checker{static assertValidString(t){if("string"!=typeof t&&!(t instanceof String)||""===t)throw Error("Invalid string")}}class Generator{static generateId(){return Date.now().toString()+"-"+crypto.randomUUID()}}class ToDo{#t=null;#e=null;#i=null;#r=null;#o=null;#s=null;#a=null;constructor(t,e,i,r,o,s){this.#t=Generator.generateId(),this.title=t,this.description=e,this.dueDate=i,this.priority=r,this.isChecked=o,this.#a=s}get id(){return this.#t}get title(){return this.#e}get description(){return this.#i}get dueDate(){return this.#r}get priority(){return this.#o}get isChecked(){return this.#s}get projectId(){return this.#a}set id(t){this.#t=t}set title(t){Checker.assertValidString(t),this.#e=t}set description(t){this.#i=t}set dueDate(t){this.#r=t}set priority(t){this.#o=t}set isChecked(t){this.#s=t.toString()}edit(t,e,i,r,o){this.title=t,this.description=e,this.dueDate=i,this.priority=r,this.isChecked=o}}class Project{#t=null;#n=null;#c=[];constructor(t){this.#t=Generator.generateId(),this.name=t}get id(){return this.#t}get name(){return this.#n}get toDos(){return this.#c}set id(t){this.#t=t}set name(t){Checker.assertValidString(t),this.#n=t}edit(t){this.name=t}addToDo(t,e,i,r,o){const s=new ToDo(t,e,i,r,o,this.id);return this.#c.push(s),s}pushToDo(t){this.#c.push(t)}getToDo(t){let e=null;for(let i of this.#c)if(i.id===t){e=i;break}return e}removeToDo(t){for(let e=this.#c.length-1;e>=0;e--)if(this.#c[e].id===t){this.#c.splice(e,1);break}}}class Planner{static#l=[];static addProject(t){const e=new Project(t);return this.#l.push(e),e}static getProject(t){let e=null;for(let i of this.#l)if(i.id===t){e=i;break}return e}static removeProject(t){for(let e=this.#l.length-1;e>=0;e--)if(this.#l[e].id===t){this.#l.splice(e,1);break}}static getProjects(){return this.#l}static setProjects(t){this.#l=t}static getRelatedToDos(t){return this.getProject(t).toDos}}class Priority{static HIGH="high";static MEDIUM="medium";static LOW="low"}class DOMHandler{static#d;static#u;static#h;static#p;static#m;static#S;static#y;static#P;static#j;static#g;static#b;static initialize(t){this.#d=t,this.#u=document.querySelector(".sidebar-content"),this.#h=document.querySelector(".project-form"),this.#m=document.querySelector("#add-project-button"),this.#S=document.querySelector("#project-form-name"),this.#p=this.#v('<div class="project-item" data-id=""> <div class="project-name"></div> <button class="project-remove visual-button remove-button small-button square"></button> </div>'),this.#y=document.querySelector(".main-panel"),this.#P=this.#v('<div class="main-panel-header"> <div class="main-panel-title"> <div class="main-panel-project-name"></div> <button id="add-todo-button" class="visual-button add-button"></button> </div> </div>'),this.#j=this.#v('<div class="to-do-item" data-id=""> <input type="checkbox" class="preview-checkbox" name="isChecked" value="isChecked"> <div class="preview-title"></div> <div class="preview-due-date"></div> <button class="to-do-inspect visual-button inspect-button small-button square"></button> <button class="to-do-remove visual-button remove-button small-button square"></button> </div>'),this.#g=this.#v('<form class="side-panel-content" action="" data-id=""> <label for="to-do-title">Title: </label> <input id="to-do-title" type="text" name="toDoTitle" maxlength="30" required> <label for="to-do-description">Description: </label> <textarea name="toDoDescription" id="to-do-description"></textarea> <label for="to-do-due-date">Due date: </label> <input type="date" id="to-do-due-date" name="toDoDueDate"> <label for="to-do-priority">Priority: </label> <select name="toDoPriority" id="to-do-priority"></select> <label for="to-do-is-checked"> Checked: <input type="checkbox" id="to-do-is-checked" name="toDoIsChecked"> </label> <div class="side-panel-buttons"> <button type="button" class="cancel-button form-button cancel">Cancel</button> <button type="submit" class="confirm-button form-button">Confirm</button> </div> </form>'),this.#b=document.querySelector(".side-panel"),this.#D()}static displayData(t){this.#C(t)}static selectFirstProject(){this.#f(),this.#u.children.length>0&&(this.#u.children[0].classList.add("project-selected"),this.#d.updateCurrentProject())}static getCurrentProjectId(){let t=null;for(const e of this.#u.children)e.classList.contains("project-selected")&&(t=e.getAttribute("data-id"));return t}static clearTodos(){this.#y.innerHTML=""}static clearSidePanel(){this.#b.innerHTML=""}static#T(t){Object.entries(Priority).forEach((([e,i])=>{const r=document.createElement("option");r.value=i,r.textContent=e.charAt(0)+e.slice(1).toLowerCase(),t.appendChild(r),t.value=Priority.MEDIUM}))}static displayToDos(t){if(this.clearTodos(),this.clearSidePanel(),null===t)return;const e=this.#P.cloneNode(!0).firstElementChild;e.querySelector(".main-panel-project-name").textContent=t.name+" to-dos",this.#y.appendChild(e);const i=document.createElement("div");i.classList.add("main-panel-content"),this.#y.appendChild(i),e.querySelector("#add-todo-button").addEventListener("click",(t=>{this.clearSidePanel();const e=this.#g.cloneNode(!0).firstElementChild;this.#T(e.querySelector("#to-do-priority"));const i=(new Date).toISOString().split("T")[0];e.querySelector("#to-do-due-date").value=i,e.querySelector(".cancel-button").addEventListener("click",(t=>{this.clearSidePanel()})),e.querySelector(".confirm-button").addEventListener("click",(t=>{if(!e.checkValidity())return;t.preventDefault();const i=this.#d.addToDo(e.querySelector("#to-do-title").value,e.querySelector("#to-do-description").value,e.querySelector("#to-do-due-date").value,e.querySelector("#to-do-priority").value,e.querySelector("#to-do-is-checked").checked.toString());this.clearSidePanel(),this.#k(i,document.querySelector(".main-panel-content"))})),this.#b.appendChild(e),e.querySelector("#to-do-title").focus()})),t.toDos.sort(((t,e)=>parseInt(t.id.split("-")[0],10)-parseInt(e.id.split("-")[0],10)));for(const e of t.toDos)this.#k(e,i)}static#k(t,e){const i=this.#j.cloneNode(!0).firstElementChild;i.setAttribute("data-id",t.id),i.classList.add("priority-"+t.priority),i.querySelector(".preview-title").textContent=t.title,i.querySelector(".preview-due-date").textContent=t.dueDate;const r=i.querySelector(".preview-checkbox");"true"===t.isChecked?r.checked=!0:r.checked=!1,e.insertBefore(i,e.firstChild),i.querySelector(".preview-checkbox").addEventListener("change",(t=>{this.#d.checkEdit(i.getAttribute("data-id"),r.checked)})),i.querySelector(".inspect-button").addEventListener("click",(e=>{this.clearSidePanel();const r=this.#g.cloneNode(!0).firstElementChild;this.#T(r.querySelector("#to-do-priority")),r.setAttribute("data-id",t.id),r.querySelector("#to-do-title").value=t.title,r.querySelector("#to-do-description").value=t.description,r.querySelector("#to-do-due-date").value=t.dueDate,r.querySelector("#to-do-priority").value=t.priority,r.querySelector("#to-do-is-checked").checked="true"===t.isChecked,r.querySelector(".cancel-button").addEventListener("click",(t=>{this.clearSidePanel()})),r.querySelector(".confirm-button").addEventListener("click",(e=>{r.checkValidity()&&(e.preventDefault(),this.#d.editToDo(t.id,r.querySelector("#to-do-title").value,r.querySelector("#to-do-description").value,r.querySelector("#to-do-due-date").value,r.querySelector("#to-do-priority").value,r.querySelector("#to-do-is-checked").checked.toString()),this.clearSidePanel(),this.#q(t,i))})),this.#b.appendChild(r)})),i.querySelector(".remove-button").addEventListener("click",(e=>{i.parentElement.removeChild(i),this.#d.removeToDo(i.getAttribute("data-id"));const r=this.#I();null!==r&&r.getAttribute("data-id")===t.id&&this.clearSidePanel()}))}static#I(){return document.querySelector(".side-panel-content")}static#q(t,e){e.querySelector(".preview-title").textContent=t.title,e.querySelector(".preview-due-date").textContent=t.dueDate,e.querySelector(".preview-checkbox").checked="true"===t.isChecked,e.classList.remove("priority-low"),e.classList.remove("priority-medium"),e.classList.remove("priority-high"),e.classList.add("priority-"+t.priority)}static#E(t){t?(this.#h.style.display="grid",this.#m.style.visibility="hidden",this.#S.focus()):(this.#h.reset(),this.#h.style.display="none",this.#m.style.visibility="visible")}static#D(){const t=this.#h.querySelector('button[type="button"]'),e=this.#h.querySelector('button[type="submit"]');this.#m.addEventListener("click",(t=>{this.#E(!0)})),t.addEventListener("click",(t=>{this.#E(!1)})),e.addEventListener("click",(t=>{if(!this.#h.checkValidity())return;t.preventDefault();const e=this.#h.querySelector('input[name="projectName"]'),i=this.#d.addProject(e.value);this.#E(!1),this.#A(i)}))}static#v(t){const e=document.createElement("template");return e.innerHTML=t.trim(),e.content}static#f(){for(const t of this.#u.children)t.classList.remove("project-selected")}static#A(t){const e=this.#p.cloneNode(!0).firstElementChild;e.querySelector(".project-name").textContent=t.name,e.setAttribute("data-id",t.id),this.#u.insertBefore(e,this.#u.firstChild);e.querySelector("button.project-remove").addEventListener("click",(t=>{t.stopPropagation(),e.parentElement.removeChild(e),this.#d.removeProject(e.getAttribute("data-id"))})),e.addEventListener("click",(i=>{this.#f(),e.classList.add("project-selected"),this.#d.updateCurrentProject(),this.displayToDos(t)}))}static#C(t){t.sort(((t,e)=>parseInt(t.id.split("-")[0],10)-parseInt(e.id.split("-")[0],10)));for(const e of t)this.#A(e)}}class Serializer{static#L="id";static#F="class";static#H="classRef";static#O={ToDo:{classRef:ToDo,paramOrder:["title","description","dueDate","priority","isChecked","projectId"]},Project:{classRef:Project,paramOrder:["name"]}};static serialize(t){const e=this.#w(t);e[this.#F]=t.constructor.name;return JSON.stringify(e)}static deserialize(t,e){const i=JSON.parse(t),r=this.#R(i);return r.id=e,r}static#w(t){const e=Object.getPrototypeOf(t),i=Object.getOwnPropertyDescriptors(e),r={};for(const[e,o]of Object.entries(i))if(e!==this.#L&&"function"==typeof o.get){const i=t[e];Array.isArray(i)||(r[e]=i)}return r}static#R(t){const e=t[this.#F],i=this.#O[e];if(!i)throw new Error(`Unregistered class: ${e}`);const r=i.paramOrder.map((e=>t[e]));return new i[this.#H](...r)}}class StorageHandler{static#_=!1;static#M=null;static{this.#x()}static#x(){try{const t="__storage_test__";localStorage.setItem(t,t),localStorage.removeItem(t),this.#_=!0,this.#M=localStorage}catch(t){this.#_=!1}}static setItem(t){if(!this.#_)return;const e=Serializer.serialize(t);this.#M.setItem(t.id,e)}static getItem(t){if(!this.#_)return;const e=this.#M.getItem(t);return Serializer.deserialize(e,t)}static getItems(){if(!this.#_)return;const t=[],e=[];for(let i=0;i<this.#M.length;i++){const r=this.#M.key(i),o=this.getItem(r);o instanceof Project?t.push(o):o instanceof ToDo&&e.push(o)}return e.forEach((e=>{const i=t.find((t=>t.id===e.projectId));i&&i.pushToDo(e)})),t}static clear(){this.#_&&this.#M.clear()}static removeItem(t){this.#_&&this.#M.removeItem(t)}}class Main{static#z="Default Project";static#N=null;static{this.#x()}static#x(){this.#G(),DOMHandler.initialize(this),DOMHandler.displayData(Planner.getProjects()),DOMHandler.selectFirstProject(),DOMHandler.displayToDos(this.#N)}static#G(){Planner.setProjects(StorageHandler.getItems()),this.#V()}static#V(){if(0===Planner.getProjects().length){const t=Planner.addProject(this.#z+" 01");StorageHandler.setItem(t);const e=t.addToDo("Some task","Super description","2025-05-10",Priority.LOW,"false");StorageHandler.setItem(e)}}static addProject(t){const e=Planner.addProject(t);return StorageHandler.setItem(e),e}static removeProject(t){const e=Planner.getRelatedToDos(t);for(const t of e)StorageHandler.removeItem(t.id);Planner.removeProject(t),StorageHandler.removeItem(t);null===DOMHandler.getCurrentProjectId()&&(DOMHandler.selectFirstProject(),DOMHandler.displayToDos(this.#N)),0===Planner.getProjects().length&&(DOMHandler.clearTodos(),DOMHandler.clearSidePanel())}static removeToDo(t){Planner.getProject(this.#N.id).removeToDo(t),StorageHandler.removeItem(t)}static updateCurrentProject(){this.#N=null;const t=DOMHandler.getCurrentProjectId();null!==t&&(this.#N=Planner.getProject(t))}static checkEdit(t,e){const i=Planner.getProject(this.#N.id).getToDo(t);i.isChecked=e.toString(),StorageHandler.setItem(i)}static addToDo(t,e,i,r,o){const s=this.#N.addToDo(t,e,i,r,o);return StorageHandler.setItem(s),s}static editToDo(t,e,i,r,o,s){const a=this.#N.getToDo(t);return a.edit(e,i,r,o,s),StorageHandler.setItem(a),a}}})();